{"version":3,"sources":["./src/app/service/contact.service.ts","./src/app/modules/contact/contact-me/contact-me.component.ts","./src/app/modules/contact/contact-me/contact-me.component.html","./src/app/modules/contact/contact.module.ts","./src/app/modules/contact/contact-routing.module.ts"],"names":[],"mappings":"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","file":"modules-contact-contact-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { enviroment } from '../../environments/environment';\n\nimport { Mail, MailRespone } from '../modules/models/Mail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  headers = new HttpHeaders()\n    .set('Content-Type', 'application/json');\n  constructor(private http: HttpClient) { }\n\n  // Send mail\n  sendEmail(mail: Mail): Observable<MailRespone> {\n    return this.http.post<MailRespone>(`${enviroment.rootURL}/contact-me`, mail, { headers: this.headers });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ContactService } from '../../../service/contact.service';\nimport { catchError } from '../../../helpers/catchError';\n\nimport { checkEmail } from '../../validators/checkEmail';\n\n@Component({\n  selector: 'app-contact-me',\n  templateUrl: './contact-me.component.html',\n  styleUrls: ['./contact-me.component.css']\n})\nexport class ContactMeComponent implements OnInit {\n  isLoading = false;\n  contactFrom = new FormGroup({\n    name: new FormControl(null, [Validators.minLength(3), Validators.maxLength(60)]),\n    email: new FormControl(null, [checkEmail]),\n    subject: new FormControl(null, [Validators.required, Validators.minLength(3), Validators.maxLength(60)]),\n    message: new FormControl(null, [Validators.required, Validators.minLength(15)])\n  });\n\n  constructor(private contactService: ContactService, private toastr: ToastrService) {}\n\n  ngOnInit(): void { }\n\n  showErrors(control: string): boolean {\n    const { invalid, touched, dirty } = this.contactFrom.get(control);\n    return invalid && (touched || dirty);\n   }\n\n  onSubmit(): void {\n    this.isLoading = true;\n    this.contactService.sendEmail(this.contactFrom.value).subscribe({\n      next: (respone) => {\n        this.toastr.success(respone.message);\n        this.contactFrom.reset();\n        this.isLoading = false;\n      },\n      error: (error: HttpErrorResponse) => {\n        catchError(this.toastr, this.isLoading);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"header\">Get in touch</h1>\n  <p class=\"subtitle\">If you have any question for me, please contact me</p>\n  <form [formGroup]=\"contactFrom\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\n    <app-input\n      [name]=\"'name'\"\n      [control]=\"contactFrom.get('name')\"\n      [label]=\"'Your Name'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <app-input\n      [name]=\"'email'\"\n      [control]=\"contactFrom.get('email')\"\n      [label]=\"'Email'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <app-input\n      [name]=\"'subject'\"\n      [control]=\"contactFrom.get('subject')\"\n      [label]=\"'Subject'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <div class=\"control\">\n      <label class=\"label\">Message <span>*</span></label>\n      <textarea\n        class=\"textarea\"\n        rows=\"3\"\n        [formControl]=\"contactFrom.get('message')\"\n      ></textarea>\n\n      <ng-container *ngIf=\"showErrors('message')\">\n        <div class=\"is-danger help\">\n          Message is required and it must be at least 15 characters.\n        </div>\n      </ng-container>\n    </div>\n\n    <button\n      class=\"button button--mail\"\n      [disabled]=\"contactFrom.invalid\"\n      type=\"submit\"\n    >\n      Send email\n    </button>\n  </form>\n  <div class=\"spinner\" *ngIf=\"isLoading\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ContactRoutingModule } from './contact-routing.module';\nimport { ContactMeComponent } from './contact-me/contact-me.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [ContactMeComponent],\n  imports: [\n    CommonModule,\n    ContactRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class ContactModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContactMeComponent } from './contact-me/contact-me.component';\n\nconst routes: Routes = [\n  {path: '', component: ContactMeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContactRoutingModule { }\n"],"sourceRoot":"webpack:///"}