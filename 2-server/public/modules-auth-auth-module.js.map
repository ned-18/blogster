{"version":3,"sources":["./src/app/modules/auth/register/register.component.ts","./src/app/modules/auth/register/register.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/auth/auth-routing.module.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../../service/auth.service';\nimport { CheckPasswords } from '../../validators/checkPasswords';\nimport { checkEmail } from '../../validators/checkEmail';\nimport { checkPassword } from '../../validators/checkPassword';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  isEmailExists: string | null;\n  isUsernameExists: string | null;\n  isLoading = false;\n\n  signUpForm = new FormGroup({\n    firstName: new FormControl(null, [Validators.minLength(3), Validators.maxLength(60)]),\n    lastName: new FormControl(null, [Validators.minLength(3), Validators.maxLength(60)]),\n    username: new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(60)]),\n    email: new FormControl(null, [checkEmail]),\n    password: new FormControl(null, [checkPassword]),\n    confirmPassword: new FormControl(null, [checkPassword]),\n  }, {validators: [this.checkPasswords.validate]});\n\n  constructor(\n    private authService: AuthService,\n    private toastr: ToastrService,\n    private checkPasswords: CheckPasswords,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit(): void {\n    this.isLoading = true;\n    this.authService.registerUser(this.signUpForm.value).subscribe({\n      next: (respone) => {\n        this.toastr.success(respone.message, 'Welcome!');\n        this.isLoading = false;\n        this.router.navigate(['/join/login']);\n      },\n      error: (error: HttpErrorResponse) => { this.catchError(error); }\n    });\n  }\n\n  private catchError(error: HttpErrorResponse): void {\n    if (error.status === 400) {\n      if (error.error.message.includes('Email')) {\n        this.isEmailExists = error.error.message;\n      } else if (error.error.message.includes('Username')) {\n        this.isUsernameExists = error.error.message;\n      }\n    } else {\n      this.toastr.error('Something went wrong! Please try later.', 'Error');\n    }\n    this.isLoading = false;\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"header\">Regsiter to Stories</h1>\n  <form\n    [formGroup]=\"signUpForm\"\n    (ngSubmit)=\"onRegisterSubmit()\"\n    *ngIf=\"!isLoading\"\n  >\n    <app-input\n      [name]=\"'firstName'\"\n      [control]=\"signUpForm.get('firstName')\"\n      [label]=\"'First Name'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <app-input\n      [name]=\"'lastName'\"\n      [control]=\"signUpForm.get('lastName')\"\n      [label]=\"'Last Name'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <div class=\"position\">\n      <app-input\n        [name]=\"'username'\"\n        [control]=\"signUpForm.get('username')\"\n        [label]=\"'Username'\"\n        [maxlength]=\"'60'\"\n        (input)=\"isUsernameExists = null\"\n      ></app-input>\n      <ng-container\n        *ngIf=\"isUsernameExists && !signUpForm.get('username').errors\"\n      >\n        <p class=\"is-danger help\">\n          {{ isUsernameExists }} Please enter another username!\n        </p>\n      </ng-container>\n    </div>\n    <div class=\"position\">\n      <app-input\n        [name]=\"'email'\"\n        [control]=\"signUpForm.get('email')\"\n        [label]=\"'Email'\"\n        [maxlength]=\"'60'\"\n        (input)=\"isEmailExists = null\"\n      ></app-input>\n      <ng-container *ngIf=\"isEmailExists && !signUpForm.get('email').errors\">\n        <p class=\"is-danger help\">\n          {{ isEmailExists }} Please enter another email!\n        </p>\n      </ng-container>\n    </div>\n    <app-input\n      [name]=\"'password'\"\n      [control]=\"signUpForm.get('password')\"\n      [label]=\"'Password'\"\n      [type]=\"'password'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n    <app-input\n      [name]=\"'confirmPassword'\"\n      [control]=\"signUpForm.get('confirmPassword')\"\n      [label]=\"'Confirm password'\"\n      [type]=\"'password'\"\n      [maxlength]=\"'60'\"\n    ></app-input>\n\n    <ng-container\n      *ngIf=\"\n        signUpForm.errors &&\n        (signUpForm.get('password').touched ||\n          signUpForm.get('confirmPassword').touched)\n      \"\n    >\n      <p\n        class=\"is-danger help-passwords\"\n        *ngIf=\"signUpForm.errors.passwordsDontMatch\"\n      >\n        Password and confirm password must match!\n      </p>\n    </ng-container>\n    <button\n      class=\"button button--signup\"\n      [disabled]=\"signUpForm.invalid\"\n      type=\"submit\"\n    >\n      Register to Stories\n    </button>\n  </form>\n\n  <div class=\"footer\" *ngIf=\"!isLoading\">\n    <p class=\"suggestion\">\n      Have an account? <a class=\"link\" routerLink=\"/join/login\">Login</a>\n    </p>\n    <p class=\"policy\">\n      By registering, you agree to our <a class=\"link\">Terms of Service</a> and\n      <a class=\"link\">Privacy Policy</a>\n    </p>\n  </div>\n  <div class=\"spinner\" *ngIf=\"isLoading\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class AuthModule { }\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../../service/auth.service';\nimport { checkPassword } from '../../validators/checkPassword';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  error: string | null;\n  isLoading = false;\n\n  logInForm = new FormGroup({\n    usernameOrEmail: new FormControl(null, [Validators.required, Validators.minLength(4), Validators.maxLength(60)]),\n    password: new FormControl(null, [checkPassword]),\n  });\n\n  constructor(\n    private authService: AuthService,\n    private toastr: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void { }\n\n  onLoginSubmit(): void {\n    this.isLoading = true;\n    this.authService.loginUser(this.logInForm.value).subscribe({\n      next: (respone) => {\n        this.toastr.info(respone.message, 'Welcome!');\n        this.authService.username$.next(respone.user.username);\n        this.isLoading = false;\n        this.router.navigate(['/']);\n      },\n      error: (error: HttpErrorResponse) => { this.catchError(error); }\n    });\n  }\n\n  private catchError(error: HttpErrorResponse): void {\n    if (error.status === 401) {\n      this.error = error.error.message;\n    } else {\n      this.toastr.error('Something went wrong! Please try later.', 'Error');\n    }\n    this.isLoading = false;\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"header\">Login to Stories</h1>\n  <form [formGroup]=\"logInForm\" (ngSubmit)=\"onLoginSubmit()\" *ngIf=\"!isLoading\">\n    <app-input\n      [name]=\"'userEmail'\"\n      [control]=\"logInForm.get('usernameOrEmail')\"\n      [label]=\"'Username or Email'\"\n      [maxlength]=\"'60'\"\n      (input)=\"error = null\"\n    ></app-input>\n    <app-input\n      [name]=\"'password'\"\n      [control]=\"logInForm.get('password')\"\n      [label]=\"'Password'\"\n      [type]=\"'password'\"\n      [maxlength]=\"'60'\"\n      (input)=\"error = null\"\n    ></app-input>\n    <ng-container\n      *ngIf=\"\n        error &&\n        (!logInForm.get('usernameOrEmail').errors ||\n          !logInForm.get('password').errors)\n      \"\n    >\n      <p class=\"is-danger help\">{{ error }}</p>\n    </ng-container>\n\n    <a routerLink=\"/password/forgot-password\" class=\"forgot-password\"\n      >Forgot your password?</a\n    >\n\n    <button\n      class=\"button button--login\"\n      [disabled]=\"logInForm.invalid\"\n      type=\"submit\"\n    >\n      Login to Stories\n    </button>\n  </form>\n\n  <div class=\"footer\" *ngIf=\"!isLoading\">\n    <p class=\"suggestion\">\n      You don't have an account?\n      <a class=\"link\" routerLink=\"/join/signup\">Sign up</a>\n    </p>\n  </div>\n  <div class=\"spinner\" *ngIf=\"isLoading\">\n    <mat-spinner [diameter]=\"50\"></mat-spinner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n"],"sourceRoot":"webpack:///"}