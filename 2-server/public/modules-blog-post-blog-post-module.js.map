{"version":3,"sources":["./src/app/modules/blog-post/blog-post-home/comments/comment/comment.component.ts","./src/app/modules/blog-post/blog-post-home/comments/comment/comment.component.html","./src/app/modules/blog-post/blog-post.module.ts","./src/app/modules/blog-post/blog-post-routing.module.ts","./src/app/modules/blog-post/blog-post-home/comments/comment-form/comment-form.component.ts","./src/app/modules/blog-post/blog-post-home/comments/comment-form/comment-form.component.html","./src/app/modules/blog-post/blog-post-home/comments/comments.component.ts","./src/app/modules/blog-post/blog-post-home/comments/comments.component.html","./src/app/modules/blog-post/blog-post-home/blog-post-home.component.ts","./src/app/modules/blog-post/blog-post-home/blog-post-home.component.html"],"names":[],"mappings":"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","file":"modules-blog-post-blog-post-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment: { user: { profileImgUrl: string, username: string }; comment: string; createdAt: string };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"comment-header\">\n  <div class=\"avatar\">\n    <img\n      [src]=\"\n        comment.user.profileImgUrl\n          ? comment.user.profileImgUrl\n          : '../../../../../assets/images/avatar.jpeg'\n      \"\n      alt=\"avatar\"\n    />\n  </div>\n  <div class=\"user-info\">\n    <p class=\"username\">{{ comment.user.username }}</p>\n    <p class=\"date\">{{ comment.createdAt | date }}</p>\n  </div>\n</div>\n<div class=\"comment-body\">\n  <p>\n    {{ comment.comment }}\n  </p>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { BlogPostRoutingModule } from './blog-post-routing.module';\nimport { BlogPostHomeComponent } from './blog-post-home/blog-post-home.component';\nimport { CommentsComponent } from './blog-post-home/comments/comments.component';\nimport { CommentComponent } from './blog-post-home/comments/comment/comment.component';\nimport { CommentFormComponent } from './blog-post-home/comments/comment-form/comment-form.component';\n\n\n@NgModule({\n  declarations: [BlogPostHomeComponent, CommentsComponent, CommentComponent, CommentFormComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    BlogPostRoutingModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ]\n})\nexport class BlogPostModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BlogPostHomeComponent } from './blog-post-home/blog-post-home.component';\nimport { CommentsComponent } from './blog-post-home/comments/comments.component';\n\nconst routes: Routes = [\n  { path: '', component: BlogPostHomeComponent },\n  { path: 'comment', component: CommentsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BlogPostRoutingModule { }\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../../../../service/auth.service';\n\n@Component({\n  selector: 'app-comment-form',\n  templateUrl: './comment-form.component.html',\n  styleUrls: ['./comment-form.component.css']\n})\nexport class CommentFormComponent implements OnInit, OnDestroy {\n  @Input() postId: number;\n  @Output('onSubmit') postComment: EventEmitter<{}> = new EventEmitter();\n  signedIn: boolean;\n  subscription: Subscription;\n\n  commentForm = new FormGroup({\n    comment: new FormControl(null, [Validators.required, Validators.minLength(3), Validators.maxLength(60)]),\n  });\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.subscription =this.authService.signedIn$.subscribe(signedIn => {\n      this.signedIn = signedIn;\n    });\n  }\n\n  showErrors(control: string): boolean {\n    const { invalid, touched, dirty } = this.commentForm.get(control);\n    return invalid && (touched || dirty);\n  }\n\n  onCreateComment(commentForm: { comment: string }): void {\n    this.commentForm.reset();\n    this.postComment.emit(commentForm);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<form\n  [formGroup]=\"commentForm\"\n  (ngSubmit)=\"onCreateComment(commentForm.value)\"\n  *ngIf=\"signedIn; else elseBlock\"\n>\n  <div class=\"control\">\n    <label class=\"label\">Leave your comment <span>*</span></label>\n    <textarea\n      class=\"textarea\"\n      rows=\"3\"\n      [formControl]=\"commentForm.get('comment')\"\n    ></textarea>\n\n    <ng-container *ngIf=\"showErrors('comment')\">\n      <div class=\"is-danger help\">\n        Comment field is required and must be at least 3 characters.\n      </div>\n    </ng-container>\n  </div>\n  <button\n    type=\"submit\"\n    class=\"button button--comment\"\n    [disabled]=\"commentForm.invalid\"\n  >\n    Leave your comment\n  </button>\n</form>\n<ng-template #elseBlock\n  ><p class=\"login\">\n    You must be\n    <a [routerLink]=\"'/join/login'\"> logged in</a> to post a comment.\n  </p></ng-template\n>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommentsService } from '../../../../service/comments.service';\nimport { catchError } from '../../../../helpers/catchError';\n\nimport { Comment } from '../../../models/Comment';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n  postId: number;\n  comments: Comment[] = [];\n  title: string;\n  isLoading = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private commentsService: CommentsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.postId = Number(this.activatedRoute.snapshot.paramMap.get('postId'));\n    this.getComments();\n  }\n\n  createNewComment(commentFormValue: { comment: string }): void {\n    this.isLoading = true;\n    this.commentsService.postComment(this.postId, commentFormValue).subscribe({\n      next: (respone) => {\n        this.getComments();\n        this.toastr.success(respone.message);\n        this.isLoading = false;\n      },\n      error: (error: HttpErrorResponse) => {\n        catchError(this.toastr, this.isLoading);\n      }\n    });\n  }\n\n  private getComments(): void {\n    this.commentsService.getComments(this.postId).subscribe({\n      next: (respone) => {\n        console.log(respone);\n        this.comments = respone.comments;\n        this.title = respone.postTitle;\n        this.isLoading = false;\n      },\n      error: (error: HttpErrorResponse) => {\n        catchError(this.toastr, this.isLoading);\n      }\n    });\n  }\n}\n\n\n","<div class=\"container\" *ngIf=\"!isLoading\">\n  <h1 class=\"title\">{{ title }}</h1>\n  <p class=\"comments\">Comments ({{ comments.length }})</p>\n\n  <ng-container *ngIf=\"comments.length\">\n    <app-comment\n      *ngFor=\"let comment of comments\"\n      [comment]=\"comment\"\n    ></app-comment>\n  </ng-container>\n  <div *ngIf=\"!comments.length\">\n    <p class=\"no-comment\">\n      Nobody has commented on this post yet. Be the first.\n    </p>\n  </div>\n\n  <app-comment-form\n    [postId]=\"postId\"\n    (onSubmit)=\"createNewComment($event)\"\n  ></app-comment-form>\n</div>\n\n<div class=\"spinner\" *ngIf=\"isLoading\">\n  <mat-spinner [diameter]=\"50\"></mat-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { PostsService } from '../../../service/posts.service';\nimport { catchError } from '../../../helpers/catchError';\n\nimport { Post } from '../../models/Post';\n\n@Component({\n  selector: 'app-blog-post-home',\n  templateUrl: './blog-post-home.component.html',\n  styleUrls: ['./blog-post-home.component.css']\n})\nexport class BlogPostHomeComponent implements OnInit {\n  postId: string;\n  post: Post;\n  isLoading = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postsService: PostsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.postId = this.activatedRoute.snapshot.paramMap.get('postId');\n    this.getPost();\n  }\n\n  private getPost(): void {\n    this.postsService.getOnePost(this.postId).subscribe({\n      next: (respone) => {\n        this.post = respone.data;\n        this.isLoading = false;\n      },\n      error: (error: HttpErrorResponse) => {\n        catchError(this.toastr, this.isLoading);\n      }\n    });\n  }\n}\n","<div class=\"container\" *ngIf=\"post\">\n  <ng-container>\n    <ul class=\"items\">\n      <li>\n        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\"\n          >create</mat-icon\n        >{{ post.user.username }}\n      </li>\n      <li>\n        <mat-icon class=\"icon\">today</mat-icon>{{ post.createdAt | date }}\n      </li>\n    </ul>\n    <div>\n      <h1 class=\"title\">{{ post.title }}</h1>\n      <p [ngClass]=\"['type', post.type]\">{{ post.type }}</p>\n    </div>\n    <div class=\"image-container\">\n      <img [src]=\"post.imageUrl\" [alt]=\"post.title\" />\n    </div>\n    <p class=\"content\">{{ post.content }}</p>\n  </ng-container>\n  <div class=\"comments\">\n    <p [routerLink]=\"'/post/' + postId + '/comment'\">\n      Show all comments ({{ post.comment.length }})\n    </p>\n  </div>\n</div>\n<div class=\"spinner\" *ngIf=\"isLoading\">\n  <mat-spinner [diameter]=\"50\"></mat-spinner>\n</div>\n"],"sourceRoot":"webpack:///"}